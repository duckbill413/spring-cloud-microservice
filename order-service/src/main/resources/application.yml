server:
  port: 0

spring:
  application:
    name: order-service
  kafka:
    producer:
      bootstrap-servers: 172.18.0.101:9092
#      bootstrap-servers: 127.0.0.1:9092
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:mysql://localhost:3306/my_db
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234
#  datasource:
#    url: jdbc:h2:mem:testdb;MODE=MySQL;DATABASE_TO_LOWER=TRUE
#    driver-class-name: org.h2.Driver
#    username: sa
#    password: 1234
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
    database: mysql
    defer-datasource-initialization: true

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

logging:
  level:
    wh.duckbill.orderservice: info
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3_multi
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health, bean, info, httptrace, metrics, prometheus