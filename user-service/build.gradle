plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'wh.duckbill'
version = '1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation group: 'com.h2database', name: 'h2', version: '2.2.224'

    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.3.1'

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.1'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-config
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bootstrap
    // 주로 Config Server과 함꼐 사용되어 애플리케이션이 시작되기 전에 외부 설정을 가져올 수 있도록 함
    // bootstrap.yml 은 application.yml 보다 먼저 로드 되며 외부 설정 서버와의 연결등을 포함
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bus-amqp
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-circuitbreaker-resilience4j
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Spring boot 3.0 - Micrometer
    implementation 'io.zipkin.brave:brave-instrumentation-spring-web'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    // Spring boot 3.0 Zipkin - Brave
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.micrometer:micrometer-observation'

    // https://mvnrepository.com/artifact/io.github.openfeign/feign-micrometer
    implementation 'io.github.openfeign:feign-micrometer'

    // https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
